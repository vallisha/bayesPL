remotes::install_github("stan-dev/posterior")
install.packages("dplyr")
install.packages("tidyr")
install.packages("stringr")
install.packages("ggplot2")
install.packages("posterior")
install.packages("rmarkdown")
install.packages("testthat")
install.packages("shinystan")
install.packages("rstan")
install.packages("kableExtra")
install.packages("bayesplot")
library(bayesPL)
library(bayesPL)
set_cmdstan_path(path = NULL)
package(devtools)
devtools::document()
library(cmstanr)
library(cmdstanr)
install_cmdstan()
install_cmdstan()
package(devtools)
library(devtools)
devtools::install_github("hadley/devtools")
install.packages("devtools")
library(devtools)
load_all()
library(bayesPL)
library(devtools)
load_all()
library(cmdstanr)
y <- c(1,2,3,4,5)
model_file <-
system.file("stan",
"test.stan",
package = "bayesPL",
mustWork = TRUE)
model <- cmdstanr::cmdstan_model(model_file)
fit <- model$sample(data=standata,
chains=4,
iter=2000,
iter_warmup=500)
N <- 5
draws<-fit$draws()
diagnostics<-fit$sampler_diagnostics()
print(fit)
#' bpl function
#'
#' @param data input data frame with column y
#' @export
#'
#' @examples
bpl <- function(data){
standata = list(y = data$y,
N = nrow(data))
model_file <-
system.file("stan",
"test.stan",
package = "bayesPL",
mustWork = TRUE)
model <- cmdstanr::cmdstan_model(model_file)
fit <- model$sample(data=standata,
chains=4,
iter=2000,
iter_warmup=500)
draws<-fit$draws()
diagnostics<-fit$sampler_diagnostics()
print(fit)
}
library(cmdstanr)
load_all()
Run `rm(list = c("bpl"))`
Run rm(list = c("bpl"))
rm(list = c("bpl"))
library(devtools)
load_all()
library(cmdstanr)
y <- c(1,2,3)
n <- 3
model_file <-
system.file("stan",
"test.stan",
package = "bayesPL",
mustWork = TRUE)
model <- cmdstanr::cmdstan_model(model_file)
fit <- model$sample(data=standata,
chains=4,
iter=2000,
iter_warmup=500)
draws<-fit$draws()
diagnostics<-fit$sampler_diagnostics()
print(fit)
}
library(devtools)
load_all()
library(cmdstanr)
run()
model_file <-
system.file("stan",
"test.stan",
package = "bayesPL",
mustWork = TRUE)
y <- c(1,2,3)
"test.stan",
package = "bayesPL",
mustWork = TRUE)
library(devtools)
load_all()
library(cmdstanr)
y <- 1
"test.stan",
package = "bayesPL",
mustWork = TRUE)
y<- c(1,2,3,4)
#' bpl function
#'
#' @param data input data frame with column y
#' @export
#'
#' @examples
bpl <- function(data){
standata = list(y = data$y,
N = nrow(data))
model_file <-
system.file("stan",
"test.stan",
package = "bayesPL",
mustWork = TRUE)
model <- cmdstanr::cmdstan_model(model_file)
fit <- model$sample(data=standata,
chains=4,
iter=2000,
iter_warmup=500)
draws<-fit$draws()
diagnostics<-fit$sampler_diagnostics()
print(fit)
}
standata = list(y = data$y,
N = nrow(data))
model_file <-
system.file("stan",
"test.stan",
package = "bayesPL",
mustWork = TRUE)
fit <- model$sample(data=standata,
chains=4,
iter=2000,
iter_warmup=500)
draws<-fit$draws()
diagnostics<-fit$sampler_diagnostics()
print(fit)
library(bayesPL)
library(bayesPL)
library(bayesPL)
library(bayesPL)
install.packages("formatR", repos = "http://cran.rstudio.com")
library(bayesPL)
library(bayesPL)
library(devtools)
load_all()
library(cmdstanr)
y -
y = rnorm(10,1,1)
#' bpl function
#'
#' @param data input data frame with column y
#' @export
#'
#' @examples
bpl <- function(data){
standata = list(y = data$y,
N = nrow(data))
model_file <-
system.file("stan",
"test.stan",
package = "bayesPL",
mustWork = TRUE)
model <- cmdstanr::cmdstan_model(model_file)
fit <- model$sample(data=standata,
chains=4,
iter=2000,
iter_warmup=500)
draws<-fit$draws()
diagnostics<-fit$sampler_diagnostics()
print(fit)
}
library(devtools)
load_all()
library(cmdstanr)
y = c(1,2,3)
print(data)
print(y)
nrow(y)
bpl <- function(data){
standata = list(y = data$y,
N = nrow(data))
model_file <-
system.file("stan",
"test.stan",
package = "bayesPL",
mustWork = TRUE)
model <- cmdstanr::cmdstan_model(model_file)
fit <- model$sample(data=standata,
chains=4,
iter=2000,
iter_warmup=500)
draws<-fit$draws()
diagnostics<-fit$sampler_diagnostics()
print(fit)
}
standata = list(y = data$y,
N = nrow(data))
model_file <-
system.file("stan",
"test.stan",
package = "bayesPL",
mustWork = TRUE)
model <- cmdstanr::cmdstan_model(model_file)
fit <- model$sample(data=standata,
chains=4,
iter=2000,
iter_warmup=500)
draws<-fit$draws()
diagnostics<-fit$sampler_diagnostics()
print(fit)
}
devtools::load_all()
d <- data.frame(y=rnorm(10,1,1))
bpl(data=d)
install.packages(dylib)
install.packages(knitr)
otool -L exefile
read_cmdstan_csv()
bpl(data=d)
read_cmdstan_csv()
output(chain 1)
output(1)
bpl(data=d)
bpl(data=d)
check_cmdstan_toolchain()
install_cmdstan(
dir = NULL,
cores = getOption("mc.cores", 2),
quiet = FALSE,
overwrite = FALSE,
timeout = 1200,
version = NULL,
release_url = NULL,
cpp_options = list(),
check_toolchain = TRUE
)
cmdstan_version()
install_cmdstan()
g++ version
g++ --version
devtools::load_all()
d <- data.frame(y = rnorm(10,1,1))
bpl(data = d)
check_cmdstan_toolchain()
bpl(data = d)
bpl(data = d)
devtools::load_all()
d <- data.frame(y = rnorm(10,1,1))
bpl(data = d)
library(cmdstanr)
install_cmdstan()
summary()
summary(fit)
summary(bpl)
summary(bpl data= d)
summary(bpl(data= d))
plot(x,y)
summary(data)
summary(d)\
summary(d)
summary(standata)
summary(bpl)
plot(d)
devtools::load_all()
d<- data.frame(y=rnorm(10,1,1))
bpl(data = d)
devtools::load_all()
n.alg <- 5
n.inst <- 25
x.matrix <- matrix(runif(n.alg*n.inst), ncol=n.alg)
colnames(x.matrix) <- paste("Alg", 1:n.alg, sep="")
rownames(x.matrix) <- paste("Inst", 1:n.inst, sep="")
res <- bPlackettLuceModel(x.matrix, min=FALSE, nsim=2000, nchains=3)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
n.alg <- 5
n.inst <- 25
x.matrix <- matrix(runif(n.alg*n.inst), ncol=n.alg)
colnames(x.matrix) <- paste("Alg", 1:n.alg, sep="")
rownames(x.matrix) <- paste("Inst", 1:n.inst, sep="")
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
n.alg <- 5
n.inst <- 25
x.matrix <- matrix(runif(n.alg*n.inst), ncol=n.alg)
colnames(x.matrix) <- paste("Alg", 1:n.alg, sep="")
rownames(x.matrix) <- paste("Inst", 1:n.inst, sep="")
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
library(cmdstanr)
load_all()
load_all()
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
library(cmdstanr)
n.alg <- 5
n.inst <- 25
colnames(x.matrix) <- paste("Alg", 1:n.alg, sep="")
x.matrix <- matrix(runif(n.alg*n.inst), ncol=n.alg)
colnames(x.matrix) <- paste("Alg", 1:n.alg, sep="")
rownames(x.matrix) <- paste("Inst", 1:n.inst, sep="")
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
cmdstanr::install_cmdstan()
library(devtools)
load_all()
library(devtools)
library(cmdstanr)
n.alg  <- 5
library(devtools)
load_all()
library(cmdstanr)
n.alg  <- 5
n.inst <- 25
x.matrix <- matrix(runif(n.alg*n.inst), ncol=n.alg)
colnames(x.matrix) <- paste("Alg", 1:n.alg, sep="")
rownames(x.matrix) <- paste("Inst", 1:n.inst, sep="")
res <- bPlackettLuceModel(x.matrix, min=FALSE, nsim=2000, nchains=3)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
res$expected.win.prob
results$expected.win.prob
print(fit)
print(draws)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
print(draws)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
library(cmdstanr)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
res$expected.win.prob
library(devtools)
load_all()
library(cmdstanr)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
library(cmdstanr)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
library(cmdstanr)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
library(cmdstanr)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
library(cmdstanr)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
library(cmdstanr)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
library(cmdstanr)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
library(cmdstanr)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
library(cmdstanr)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
library(cmdstanr)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
library(cmdstanr)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(posterior)
library(devtools)
load_all()
library(cmdstanr)
library(posterior)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
library(cmdstanr)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
library(cmdstanr)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
library(cmdstanr)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
library(cmdstanr)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
library(cmdstanr)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=5)
library(devtools)
load_all()
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=5)
library(devtools)
load_all()
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=5)
library(devtools)
load_all()
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=5)
library(devtools)
load_all()
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=5)
library(devtools)
load_all()
n.alg  <- 5
n.inst <- 25
x.matrix <- matrix(runif(n.alg*n.inst), ncol=n.alg)
colnames(x.matrix) <- paste("Alg", 1:n.alg, sep="")
rownames(x.matrix) <- paste("Inst", 1:n.inst, sep="")
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=5)
library(devtools)
load_all()
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=5)
library(devtools)
load_all()
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=5)
library(devtools)
load_all()
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=5)
library(devtools)
load_all()
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=5)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=5)
library(devtools)
load_all()
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=5)
library(devtools)
load_all()
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=5)
library(devtools)
load_all()
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=5)
n.alg  <- 5
n.inst <- 25
x.matrix <- matrix(runif(n.alg*n.inst), ncol=n.alg)
colnames(x.matrix) <- paste("Alg", 1:n.alg, sep="")
rownames(x.matrix) <- paste("Inst", 1:n.inst, sep="")
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=5)
library(devtools)
load_all()
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=5)
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
library(devtools)
load_all()
res <- bpl(x.matrix, min=FALSE, nsim=2000, nchains=3)
